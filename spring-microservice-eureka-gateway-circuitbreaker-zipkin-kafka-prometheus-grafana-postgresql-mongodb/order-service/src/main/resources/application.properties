# Application
server.port=8081
spring.application.name=order-service
#
# Eureka
#
eureka.client.serviceUrl.defaultZone=http://eureka:eureka@localhost:8761/eureka
#
# Circuit Breaker
#
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.appoptics.metrics.export.enabled=true
#
# Resilience4j Properties
#
resilience4j.circuitbreaker.instances.inventory-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory-service.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory-service.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory-service.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory-service.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory-service.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory-service.automaticTransitionFromOpenToHalfOpenEnabled=true
#
# Resilience4j Timeout Properties
#
resilience4j.timelimiter.instances.inventory-service.timeout-duration=3s
#
# Resilience4j Retry Properties
#
resilience4j.retry.instances.inventory-service.max-attempts=3
resilience4j.retry.instances.inventory-service.wait-duration=5s
#
# PostgreSQL
#
spring.datasource.url=jdbc:postgresql://localhost:5432/order_service
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#
# Zipkin
#
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
#
# logging.pattern.level: application name, traceId and spanId.
# The traceId is unique ID to track a single request or transaction.
#
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
#
# Kafka
#
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notification_topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
